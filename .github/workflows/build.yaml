name: Build Installer

on:
  push:
    branches:
      - master

jobs:
  build:
    if: ${{ github.repository_owner == 'sklauncher' }}
    runs-on: windows-latest
    outputs:
      jar-checksum: ${{ steps.jar-hash.outputs.checksum }}
      installer-checksum: ${{ steps.installer-hash.outputs.checksum }}

    steps:
      - uses: actions/checkout@v5

      # The JAR file is not stored in the repository, so we need to download it.
      # Since the download uses a one-time URL, we keep a direct link in the repository secrets.
      # However, this link always points to the universal JAR URL from the latest release
      # (checksum verification follows in the next step).
      - name: Download JAR
        run: |
          Invoke-WebRequest -Uri "${{ secrets.JAR_URL }}" -OutFile "SKlauncher.jar"
        shell: pwsh

      - name: Display and capture checksum of JAR
        id: jar-hash
        run: |
          $hash = (Get-FileHash SKlauncher.jar -Algorithm SHA256).Hash
          Write-Host "JAR SHA256: $hash"
          Add-Content $env:GITHUB_OUTPUT "checksum=$hash"
        shell: pwsh

      - name: Install InnoSetup
        run: |
          winget install --id=JRSoftware.InnoSetup -e --silent --accept-source-agreements --accept-package-agreements
        shell: pwsh

      - name: Compile Installer
        run: |
          $isccPath = "$env:LOCALAPPDATA\Programs\Inno Setup 6\ISCC.exe"
          
          if (-not (Test-Path $isccPath)) {
            Write-Error "ISCC.exe not found at: $isccPath"
            exit 1
          }
          
          Write-Host "Found ISCC.exe at: $isccPath"
          & $isccPath /O"." inno.iss
        shell: pwsh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SKlauncher-Installer
          path: "*_Setup.exe"

      - name: Display and capture checksum of Installer
        id: installer-hash
        run: |
          $hash = (Get-FileHash *_Setup.exe -Algorithm SHA256).Hash
          Write-Host "Installer SHA256: $hash"
          Add-Content $env:GITHUB_OUTPUT "checksum=$hash"
        shell: pwsh

  update_latest_release:
    name: Upload build to Latest Release
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Set up variables
        id: vars
        run: |
          echo "date_now=$(date --rfc-3339=seconds)" >> "${GITHUB_OUTPUT}"

      - name: Download build artifacts from previous job
        uses: actions/download-artifact@v5
        with:
          path: artifacts

      - name: Delete the existing latest pre-release
        run: |
          gh release delete latest --cleanup-tag --yes --repo $GITHUB_REPOSITORY || echo "Release 'latest' not found, continuing..."
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Create a new latest build release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: artifacts/*/*
          body: |
            **This is an automatically generated latest build of SKlauncher.**
            **⚠️ This is a development build and may be unstable. ⚠️**
            **Use at your own risk.**

            ## Build Information
            - **Build date:** `${{ steps.vars.outputs.date_now }}`
            - **Commit:** ${{ github.sha }}
            - **Triggered by:** ${{ github.event_name }}

            ## Checksums
            - **JAR SHA256:** `${{ needs.build.outputs.jar-checksum }}`
            - **Installer SHA256:** `${{ needs.build.outputs.installer-checksum }}`
          name: Latest Build
          prerelease: true
          removeArtifacts: true
          tag: latest
